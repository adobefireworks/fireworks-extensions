
	// Not very efficient, but works and that's what we want for now.
	function makeRegExp(q)
	{
		var r = "^";
		for (var i = 0; i < q.length; i++) {
			switch (q[i])
			{
			case '/':
			case '.':
			case '+':
			case '?':
			case '|':
			case '(':
			case ')':
			case '[':
			case ']':
			case '{':
			case '}':
			case '\\':
				r += "\\"+q[i];
				break;
				
			case '*':
				r += "(.*)";
				break;
				
			default:
				r += q[i];
			}
		}
		r += "$";
		
		return new RegExp(r);
	}

	var dom = fw.getDocumentDOM();

	function walkLayers(layers, r) {
		var ret = [];
		for (var i = 0; i < layers.length; i++) {
			var layer = dom.layers[i];
			walkElements(layer.elems, r, ret);
		}
		return ret;
	}
	
	function walkElements(elements, r, ret) {
		var element;
		for (var i = 0; i < elements.length; i++) {
			element = elements[i];
			// element.layerType == normal|web
			if (!element.isLayer) {
				if (element == "[object SliceHotspot]") {
					if (element.baseName !== null && element.baseName.match(r)) {
						ret.push(element);
					}
				} else { // normal element
					if (element.name != null && element.name.match(r)) {
						ret.push(element);
					}
				}
			}
		}
	}
	
	var q = prompt("Find", "");
	if (q !== null) {
		r = makeRegExp(q);
		var elements = walkLayers(dom.layers, r);
		if (elements.length == 1) {
			fw.selection = elements;
		} else if (elements.length > 1 ) {
			alert(elements.length + " elements found with name `" + q +"`.");
			fw.selection = elements;
		} else {
			alert("Element with name `" + q +"` was not found.");
		}
	}